# .github/workflows/build-check.yml
name: Build Check

on:
  pull_request:
    branches:
      - main

permissions:
  checks: write     # needed to create/update the Checks API run
  contents: read    # read repository files

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initiate Build Check
        id: init
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.checks.create({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              name:  'Build Check',                                       # this must exactly match the workflow name
              head_sha: context.payload.pull_request.head.sha,
              status:   'in_progress'
            });
            core.setOutput('check_run_id', response.data.id);

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Gradle build
        id: build
        run: ./gradlew build --info

      - name: Complete Build Check
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.checks.update({
              owner:        context.repo.owner,
              repo:         context.repo.repo,
              check_run_id: ${{ steps.init.outputs.check_run_id }},
              status:       'completed',
              conclusion:   ${{ steps.build.outcome == 'success' && 'success' || 'failure' }}
            });
